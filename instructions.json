{
    "response_formats": {
        "markdown": {
            "main": "Respond using markdown style formatting. Use the # character for headers, with at least one space in between the header and the next text. Surround single line code with single backticks, and multiple lines of code with: ```python SAMPLE_CODE```",
            "table_styles": {
                "bullets": "Format the parameters and their descriptions as a table. The table will be in the form of a tabbed rows. The description for each param will be on a new line and indented",
                "pipes": "For parameters only, format them as a markdown table using the instructions: To add a table, use three or more hyphens (---) to create each column header, and use pipes (|) to separate each column. For compatibility, you should also add a pipe on either end of the row"
            }
        },
        "html": {
            "main": "Respond in HTML format. Create a button at top linked to the API site for the related function or class. Make an HTML table with borders for the parameters. Put any code inside <pre><code> tag, using the following CSS for styling: <style> code { font-family: Consolas,'courier new'; color: crimson; background-color: #f1f1f1; padding: 2px; font-size: 105%; } pre { white-space: pre; font-family: Consolas,'courier new'; background-color: #f3f3f3; } </style>"
        }
    },
    "role_contexts": {
        "api_explain": {
            "instruct": "the description, parameters, attributes, 'returns', code examples Provide a minimum of 3 examples, increasing in complexity, using various parameters",
            "prompt_preface_true": "For the following documentation, summarize when available",
            "prompt_preface_false": "For the following, provide me"
        },
        "code_help": {
            "instruct": "Provide at least 3 examples, using various parameters"
        }
    },
    "explain_levels": [
        "concise",
        "comprehensive",
        "advanced",
        "dumbed-down",
        "technical",
        "pedagogical",
        "professional",
        "child-level"
    ],
    "comment_levels": [
        "normal",
        "concise",
        "detailed",
        "verbose",
        "exhaustive",
        "pedagogical"
    ]
}